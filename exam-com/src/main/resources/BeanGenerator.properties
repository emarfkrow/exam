# サーブレット起動時にプログラムの自動生成を行うか
BeanGenerator.autogenerate           false
# コンパイルまで行うか
BeanGenerator.compile                false

# javaファイル出力のルートパス
BeanGenerator.javaPath               src\\main\\java
# SQLファイル出力のルートパス
BeanGenerator.sqlPath                src\\main\\resources\\sql
# グリッド列ファイル出力のルートパス
BeanGenerator.gridPath               src\\main\\resources\\META-INF\\resources\\model
# htmlファイル出力のルートパス
BeanGenerator.htmlPath               src\\main\\resources\\META-INF\\resources\\WEB-INF\\templates\\model

# formクラス内バリデータの正規表現（サフィックスは2桁以上でないと誤爆しやすい）
BeanGenerator.valid._M               ([0-9]{2})?
BeanGenerator.valid._Y               ([0-9]{4})?
BeanGenerator.valid.BI               ([0-9]{8})?
BeanGenerator.valid.YM               ([0-9]{4}(\\\\/|\\\\-)[0-9]{1,2})?
BeanGenerator.valid.YMD              ([0-9]{4}(\\\\/|\\\\-)[0-9]{1,2}(\\\\/|\\\\-)[0-9]{1,2})?
BeanGenerator.valid.DT               ([0-9]{4}(\\\\/|\\\\-)[0-9]{1,2}(\\\\/|\\\\-)[0-9]{1,2}(T| )[0-9]{1,2}:[0-9]{1,2}(:[0-9]{1,2}(\\\\.[0-9]{3})?)?|[0-9]{13})?
BeanGenerator.valid.HM               ([0-9]{1,2}:[0-9]{1,2})?
BeanGenerator.valid.TM               ([0-9]{1,}:[0-9]{1,2})?
BeanGenerator.valid.UBINNO           ([0-9]{7}|[0-9]{3}\\\\-[0-9]{4})?
BeanGenerator.valid.TELNO            ([ \\\\-0-9]{1,15})?

# entityクラスのパッケージ
BeanGenerator.package.entity         com.example.entity
# actionクラスのパッケージ
BeanGenerator.package.action         com.example.action.model.base
# formクラスのパッケージ
BeanGenerator.package.form           com.example.form.model.base

# 評価対象としないテーブル名のCSV
BeanGenerator.ignores                HMA_HHINMOT_PF,HMA_HHINKEY_PF
# 兄弟判定で弟にしないテーブル名のCSV
BeanGenerator.eldests                M_HHINMOK
# 兄弟判定で弟を設定しないテーブル名のCSV
BeanGenerator.onlychilds             M_BARCD,M_BARINDX,M_GENKA,M_NTANKA,M_SGENKA,M_SKHIN,M_TANKA,M_WEBKAN
# 子にしないテーブル名のCSV
BeanGenerator.foundlings             HTY_BMSSHUY_PF,HTY_BRHINY_PF
# 対象外の列名
BeanGenerator.skipcolumn             ^(FILLER|ABSTRACT|PUBLIC)$
# ページ行数
BeanGenerator.rows                   3

# 固定長列で自動採番のサフィックス
BeanGenerator.char.numbering.suffixs _NO
# （ホスト対応）指定があれば、基本的にはCHARはNOTNULLにしない。指定に合致する場合はNOTNULLにする
BeanGenerator.char.notnull.suffixs   _YMD,_YM,_Y,_M

# 登録日時カラム名
BeanGenerator.insert_dt              insert_dt
# 登録者カラム名
BeanGenerator.insert_by              insert_by
# 更新日時カラム名
BeanGenerator.update_dt              update_dt
# 更新者カラム名
BeanGenerator.update_by              update_by

# 選択項目のサフィックス
BeanGenerator.options.suffixs        _f,_kb,_kbn
# 選択項目取得URL
BeanGenerator.options.json           MCodeValueSearch.json
# 選択項目取得時のパラメータ名
BeanGenerator.options.paramkey       code_nm
# 選択項目取得時の値用カラム名
BeanGenerator.options.value          CODE_VALUE
# 選択項目取得時のラベル用カラム名
BeanGenerator.options.label          CODE_VALUE_MEI

# テキストエリア項目のサフィックス
BeanGenerator.textarea.suffixs       _tx

# 日付入力のサフィックス
BeanGenerator.input.date.suffixs     _ymd
# 8桁日付入力のサフィックス
BeanGenerator.input.date8.suffixs    BI
# 日時入力のサフィックス
BeanGenerator.input.datetime.suffixs _dt
# 年月入力のサフィックス
BeanGenerator.input.month.suffixs    _ym
# 時刻入力のサフィックス
BeanGenerator.input.time.suffixs     _hm
# 検索画面で範囲指定となる項目のサフィックス
BeanGenerator.input.range.suffixs    _ymd,_ym,_y,_m,_dt,_hm,_tm,_qt,_am,_bi
# 検索画面で部分一致となる項目のサフィックス
BeanGenerator.input.like.suffixs     _mei
# 検索画面でnullを「0」として検索する項目のサフィックス
BeanGenerator.input.flag.suffixs     _f
# ファイル選択のサフィックス
BeanGenerator.input.file.suffixs     _file

# 参照モデルの名称列探索のために置換するID列・名称列のペア
BeanGenerator.refer.pairs            _id:_mei,_nm:_mei,_code:_name,_cd:_mei
