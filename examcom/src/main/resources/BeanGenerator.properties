# BeanGenerator.properties：ソース生成時に必要な情報

# 関連評価対象外のテーブル名
DataSources.relation.ignore.re        (?i)^(PLAN_TABLE|SYS_IMPORT_TABLE_.+|.+\\$.+)$
# 兄弟のうち唯一、弟を持たせるテーブル名
DataSources.relation.eldest.re        (?i)^(TB1_KO_)$
# 兄弟であっても、弟としないテーブル名
DataSources.relation.bastard.re       (?i)^(TB3_KYODAI2_)$
# 兄弟であっても、弟を持たないテーブル名
DataSources.relation.youngest.re      (?i)^(TB3_KYODAI3_)$
# 親子であっても、子を持たないテーブル名
DataSources.relation.dinks.re         (?i)^(TB3_KYODAI4_)$
# 親子であっても、親を持たないテーブル名
DataSources.relation.orphans.re       (?i)^(TB3_KYODAI5_)$
# 参照モデル探索に使用する、キー：値のサフィックス組み合わせ
DataSources.reration.refer.pairs      _id:_sei,_id:_mei,_cd:_mei,_no:_mei,_nm:_mei,hinban:hin_mei

# 対象外の列の正規表現
DataSources.column.ignore.re          (?i)^(FILLER|ABSTRACT|PUBLIC)$
# 数値列で自動採番しないカラム名
DataSources.column.nonumbering.int.re
# 固定長列で自動採番するカラム名
DataSources.column.numbering.char.re



# グリッド列ファイル出力のルートパス
HtmlGenerator.gridPath                src\\main\\resources\\META-INF\\resources\\model
# htmlファイル出力のルートパス
HtmlGenerator.htmlPath                src\\main\\resources\\META-INF\\resources\\WEB-INF\\templates\\model
# VIEWの検索条件にするプレフィクス
HtmlGenerator.view.search.prefix      SEARCH_
# VIEWの詳細画面用テーブル名とする列名
HtmlGenerator.view.detail.column      TABLE_NAME
# ページ行数
HtmlGenerator.rows                    3
# 【ホスト対応】数値列でカンマ・小数編集しないサフィックス
HtmlGenerator.int.noformat.suffixs



# SQLファイル出力のルートパス
SqlGenerator.sqlPath                  src\\main\\resources\\sql
SqlGenerator.deleteF                  DELETE_F
SqlGenerator.tekiyoBi                 TEKIYO_BI
SqlGenerator.shuryoBi                 SHURYO_BI



# javaファイル出力のルートパス
BeanGenerator.java.path               src\\main\\java
# entityクラスのパッケージ
BeanGenerator.java.package.entity     com.example.entity
# actionクラスのパッケージ
BeanGenerator.java.package.action     com.example.action
# formクラスのパッケージ
BeanGenerator.java.package.form       com.example.form.model.base

# 登録日時カラム名
BeanGenerator.insert_dt               insert_ts
# 登録者カラム名
BeanGenerator.insert_by               insert_user_id
# 更新日時カラム名
BeanGenerator.update_dt               update_ts
# 更新者カラム名
BeanGenerator.update_by               update_user_id
# ステータス区分
BeanGenerator.status_kb               status_kb
# 【ホスト対応】更新日時カラムが日付型でなく文字列化する場合のみフォーマットを指定する
BeanGenerator.update_dt.format

# 【ホスト対応】CHARがNOTNULLでもスペースが補填される場合、ここで正規表現が指定されていれば、それに該当する項目のみ必須チェック対象とする。
BeanGenerator.char.notnull.re
# 【ホスト対応】数値列がNOTNULLな場合、ここで正規表現が指定されていれば、「0」で補填する
BeanGenerator.number.nullable.re      (?i)^(.+FLG)$

# 年月入力のサフィックス
BeanGenerator.input.ym.suffixs        _ym
# 8桁日付入力のサフィックス
BeanGenerator.input.date8.suffixs     _ymd
# タイムスタンプのサフィックス
BeanGenerator.input.timestamp.suffixs _ts
# 日時入力のサフィックス
BeanGenerator.input.datetime.suffixs  _dt
# 日付入力のサフィックス
BeanGenerator.input.date.suffixs      _bi
# 時刻入力のサフィックス
BeanGenerator.input.time.suffixs      _hm
# 検索画面で範囲指定となる項目のサフィックス
BeanGenerator.input.range.suffixs     _y,_m,_d,_ym,_ymd,_ts,_dt,_bi,_hm,_tm,_qt,_pr,_am
# 検索画面でnullを「0」として検索する項目のサフィックス
BeanGenerator.input.flag.suffixs      _f
# ファイル選択のサフィックス
BeanGenerator.input.file.suffixs      _file
# 選択項目のサフィックス
BeanGenerator.options.suffixs         _f,_kb,_sb
# 詳細画面でプルダウン指定にするサフィックス
BeanGenerator.pulldown.suffixs        _sb
# 選択項目取得URL
BeanGenerator.options.json            MsyKbnValSearch.json
# 選択項目取得時のテーブル名
BeanGenerator.options.table           msy_kbn_val
# 選択項目取得時のパラメータ名
BeanGenerator.options.key             kbn_nm
# 選択項目取得時の値用カラム名
BeanGenerator.options.value           kbn_val
# 選択項目取得時のラベル用カラム名
BeanGenerator.options.label           kbn_val_mei
# テキストエリア項目のサフィックス
BeanGenerator.textarea.suffixs        _tx

# formクラス内の文字列用バリデータの正規表現（サフィックスは2桁以上でないと誤爆しやすい）
BeanGenerator.valid._Y                ([0-9]{4})?
BeanGenerator.valid._M                ([0-9]{2})?
BeanGenerator.valid._D                ([0-9]{2})?
BeanGenerator.valid._YM               ([0-9]{4}(\\\\/|\\\\-)[0-9]{1,2})?
BeanGenerator.valid._YMD              ([0-9]{8})?
BeanGenerator.valid._TS               ([0-9]{13}|[0-9]{4}(\\\\/|\\\\-)[0-9]{1,2}(\\\\/|\\\\-)[0-9]{1,2}(T| )[0-9]{1,2}:[0-9]{1,2}(:[0-9]{1,2}(\\\\.[0-9]{3})?)?)?
BeanGenerator.valid._DT               ([0-9]{13}|[0-9]{4}(\\\\/|\\\\-)[0-9]{1,2}(\\\\/|\\\\-)[0-9]{1,2}(T| )[0-9]{1,2}:[0-9]{1,2}(:[0-9]{1,2}(\\\\.[0-9]{3})?)?)?
BeanGenerator.valid._BI               ([0-9]{4}(\\\\/|\\\\-)[0-9]{1,2}(\\\\/|\\\\-)[0-9]{1,2})?
BeanGenerator.valid._HM               ([0-9]{1,2}:[0-9]{1,2})?
BeanGenerator.valid._TM               ([0-9]{1,}:[0-9]{1,2})?
# 追加バリデータ
BeanGenerator.valid.YY                ([0-9]{4})?
BeanGenerator.valid.MM                ([0-9]{2})?
BeanGenerator.valid.DD                ([0-9]{2})?
BeanGenerator.valid.YYMM              ([0-9]{4})?
BeanGenerator.valid.YOUBI             ([日月火水木金土])?
BeanGenerator.valid.BOTM              (B)?
BeanGenerator.valid.UBINNO            ([0-9]{7}|[0-9]{3}\\\\-[0-9]{4})?
BeanGenerator.valid.TELNO             ([ \\\\-0-9]{1,15})?
